version: '3.7'

services:

  trading_api:
    build: trading_api
    container_name: trading_api
    networks:
      - proxy
    env_file:
      - .env
    command: bash -c "python manage.py collectstatic --noinput && python manage.py migrate --noinput && gunicorn --workers=3 trading_api.wsgi -b 0.0.0.0:8080"
    depends_on:
      - postgres
    expose:
      - 8080
    ports:
      - 8080:8080

  celery:
    build: trading_api
    networks:
      - proxy
    command: celery -A routines worker -B -l info
    env_file:
      - .env
    depends_on:
      - postgres
      - redis

  trading_bot:
    build: bot
    container_name: trading_bot
    volumes:
      - .:/code
    networks:
      - proxy
    command: bash -c "python -m bot.bot"
    env_file:
      - .env
    depends_on:
      - trading_api
      - redis

  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: pass
      POSTGRES_USER: tester
      POSTGRES_DB: postgres
    ports:
      - 5432:5432
    expose:
      - 5432
    networks:
      - proxy
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  redis:
    hostname: redis
    image: redis:alpine
    networks:
      - proxy
    logging:
      driver: none


networks:
  proxy:
    driver: bridge


volumes:
  postgres_data:
